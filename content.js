let isDownloading=!1;const scrollDelay=2e3,seenThumbs=new Set,pinsMap=new Map,wait=e=>new Promise((i=>setTimeout(i,e)));function sanitizeName(e){return e&&e.replace(/[\\\/:*?"<>|]/g,"").replace(/\s+/g," ").trim().substring(0,100)||"Unknown"}function unslugify(e){return e.replace(/-/g," ").replace(/\b\w/g,(e=>e.toUpperCase()))}async function processPin(e,i,n){const t=e.querySelector("img"),o=t?.src;if(!o||seenThumbs.has(o))return!1;seenThumbs.add(o);const s=e.querySelector('[data-test-id="pinrep-footer"]'),r=s?.querySelector('a[href^="/pin/"]'),a=r?.textContent?.trim()||"",c=r?new URL(r.getAttribute("href"),location.origin).href:"",l=o.split("/").pop().split("?")[0];return pinsMap.set(o,{title:a,description:"",pinLink:c,thumbName:l,board:i,section:n}),!0}async function fetchVisitSite(e,i,n){return chrome.runtime.sendMessage({type:"log",message:"Fetching Visit Site & Description"}),console.log(`üîé [${i}/${n}] Fetching Visit Site & Description from: ${e}`),new Promise((t=>{const o=document.createElement("iframe");o.style.display="none",o.src=e,document.body.appendChild(o),o.onload=async()=>{try{const e=o.contentDocument,s=e.querySelector('[data-test-id="description-content-container"] a[href^="http"], a[href^="https"], a[href^="www"]'),r=s?.href||"",a=e.querySelector('[data-test-id="safeTextDirection"] span'),c=a?.textContent?.trim()||"";console.log(`‚úÖ [${i}/${n}] Visit: ${r||"None"}, Desc: ${c.slice(0,40)}...`),t({visitLink:r,longDesc:c})}catch(e){console.error(`‚ùå [${i}/${n}] Error fetching`,e),t({visitLink:"",longDesc:""})}finally{document.body.removeChild(o)}},setTimeout((()=>{try{document.body.removeChild(o)}catch{}console.warn(`‚è∞ [${i}/${n}] Timeout`),t({visitLink:"",longDesc:""})}),7e3)}))}async function deepScroll(e){pinsMap.clear(),seenThumbs.clear();let i=0,n=0;const t=window.location.pathname.split("/").filter(Boolean),o=(t[0],t[1]||""),s=t[2]||"",r=sanitizeName(unslugify(o)||"Pinterest_Board"),a=sanitizeName(s?unslugify(s):"");for(chrome.runtime.sendMessage({type:"log",message:`üìã Board: ${r}, Section: ${a||"(none)"}`});n<5&&isDownloading;){window.scrollBy({top:window.innerHeight,behavior:"smooth"}),await wait(2e3);const t=document.querySelectorAll('div[data-test-id="max-width-container"] div[data-test-id="pin"]');let o=0;for(const i of t)if(await processPin(i,r,a)&&(o++,!e&&seenThumbs.size>=50))return console.log("‚ö° Pin limit reached for unlicensed user (50 pins)."),{boardName:r,sectionName:a};0===o?n++:n=0;const s=document.body.scrollHeight;s===i&&n++,i=s,chrome.runtime.sendMessage({type:"progress",progress:Math.min(50,seenThumbs.size/100*50)})}return{boardName:r,sectionName:a}}async function downloadImages(e,n){const t=[],o=Array.from(pinsMap.entries());chrome.runtime.sendMessage({type:"log",message:`‚Üí Found ${pinsMap.size} pins. Fetching "Visit Site" links...`});for(let e=0;e<o.length&&isDownloading;e++){const[i,n]=o[e];let s=i;i.includes("/236x/")?s=i.replace("/236x/","/originals/"):i.includes("/474x/")&&(s=i.replace("/474x/","/originals/"));const r=s.split("/").pop().split("?")[0];let a="";if(n.pinLink){const i=await fetchVisitSite(n.pinLink,e+1,o.length);a=i.visitLink,n.description=i.longDesc||n.description,await wait(1e3)}t.push({board:n.board,section:n.section,title:n.title,description:n.description,visitSite:a,originals:s,imageName:r}),chrome.runtime.sendMessage({type:"progress",progress:50+(e+1)/o.length*50})}const s=t.map((e=>[e.board,e.section,e.title,e.description,e.visitSite,e.imageName].map((e=>`"${e.replace(/"/g,'""')}"`)).join(","))),r=["Board","Section","Title","Description","Links","ImageName"].join(",")+"\n"+s.join("\n"),a=new Blob([r],{type:"text/csv"}),c=URL.createObjectURL(a);chrome.runtime.sendMessage({type:"download",url:c,filename:`${e}/${n||"General"}/pins.csv`});for(const{originals:o,imageName:s}of t){if(!isDownloading)break;try{chrome.runtime.sendMessage({type:"download",url:o,filename:`${e}/${n||"General"}/${s}`}),await wait(800),i>0&&i%100==0&&(console.log("‚è≥ Taking a longer pause to avoid throttling..."),await wait(6e3))}catch(e){console.error("Failed to download:",o,e)}}}chrome.runtime.onMessage.addListener(((e,i,n)=>{if("startDownload"===e.action){if(isDownloading)return void n({error:"Download already in progress"});isDownloading=!0,(async()=>{try{const{boardName:i,sectionName:n}=await deepScroll(e.licenseVerified);await downloadImages(i,n,e.shouldFetchVisitSite,e.licenseVerified),chrome.runtime.sendMessage({type:"complete",message:`‚úÖ Done! Downloaded ${pinsMap.size} images and generated full pins.csv with Board + Section from URL.`})}catch(e){chrome.runtime.sendMessage({type:"error",error:e.message})}finally{isDownloading=!1}})()}else"stopDownload"===e.action&&(isDownloading=!1)}));